companyCode: TTIC
state: FL
product: AF3
rateCode: 201902
constants:
  fees:
    mgaPolicy:
      type: flat
      value: 25
    empTrust:
      type: flat
      value: 0
    fhcf:
      type: factor
      value: 0
    figa:
      type: factor
      value: 0
    citizens:
      type: factor
      value: 0
inputFields:
  coverageA:
    exp: "${it.input.coverageLimits.building.amount}"
    type: number
  coverageB:
    exp: "${it.input.coverageLimits.personalProperty.amount}"
    type: number
  baseFloodElevation:
    exp: "${it.input.property.baseFloodElevation}"
    type:
    - 'null'
    - number
    - string
  replacementCost:
    exp: "${it.input.coverageOptions.personalPropertyReplacementCost.answer}"
    type: boolean
  floodZone:
    exp: "${it.input.property.floodZone}"
    type: string
  yearBuilt:
    exp: "${it.input.property.yearBuilt}"
    type: number
  buildingDeductible:
    exp: "${it.input.deductibles.buildingDeductible.amount}"
    type: number
  contentsDeductible:
    exp: "${it.input.deductibles.personalPropertyDeductible.amount}"
    type: number
lookupFields:
  residentialBaseRate:
    type: conditions
    conditions:
    - if: "${it.inputFields.floodZone === 'V'}"
      value:
        coverageA: 1.3
        coverageB: 2
    - if: "${it.inputFields.floodZone === 'A' && (it.inputFields.baseFloodElevation
        === null || it.inputFields.baseFloodElevation === 'Unknown')}"
      value:
        coverageA: 0.59
        coverageB: 1
    - if: "${it.inputFields.floodZone === 'A' && (it.inputFields.baseFloodElevation
        === '0' || it.inputFields.baseFloodElevation === '-1 or less' || (typeof it.inputFields.baseFloodElevation
        === 'number' && it.inputFields.baseFloodElevation < 1))}"
      value:
        coverageA: 0.59
        coverageB: 0.3
    - if: "${it.inputFields.floodZone === 'A' && (it.inputFields.baseFloodElevation
        === '+1 or greater' || (typeof it.inputFields.baseFloodElevation === 'number'
        && it.inputFields.baseFloodElevation >= 1))}"
      value:
        coverageA: 0.29
        coverageB: 0.21
    - if: "${it.inputFields.floodZone === 'B' || it.inputFields.floodZone === 'C'
        || it.inputFields.floodZone === 'X'}"
      value:
        coverageA: 0.1
        coverageB: 0.14
    - if: "${it.inputFields.floodZone === 'Z'}"
      value:
        coverageA: 1.5
        coverageB: 3
  buildingDeductibleFactor:
    type: conditions
    conditions:
    - if: "${it.inputFields.buildingDeductible === 500}"
      value: 2
    - if: "${it.inputFields.buildingDeductible === 1000}"
      value: 1.33
    - if: "${it.inputFields.buildingDeductible === 2000}"
      value: 1
    - if: "${it.inputFields.buildingDeductible === 5000}"
      value: 0.9
    - if: "${it.inputFields.buildingDeductible === 10000}"
      value: 0.75
  contentsDeductibleFactor:
    type: conditions
    conditions:
    - if: "${it.inputFields.contentsDeductible === 500}"
      value: 2
    - if: "${it.inputFields.contentsDeductible === 1000}"
      value: 1.33
    - if: "${it.inputFields.contentsDeductible === 2000}"
      value: 1
    - if: "${it.inputFields.contentsDeductible === 5000}"
      value: 0.9
    - if: "${it.inputFields.contentsDeductible === 10000}"
      value: 0.75
  replacementCostFactor:
    type: conditions
    conditions:
    - if: "${it.inputFields.replacementCost === true}"
      value: 0.35
    - if: "${it.inputFields.replacementCost === false}"
      value: 0
  icc:
    type: conditions
    conditions:
    - if: "${it.inputFields.floodZone === 'B' || it.inputFields.floodZone === 'C'
        || it.inputFields.floodZone === 'X'}"
      value: 4
    - if: "${(it.inputFields.floodZone === 'A' || it.inputFields.floodZone === 'V')
        && it.inputFields.yearBuilt < 1975}"
      value: 55
    - if: "${it.inputFields.floodZone === 'A' && it.inputFields.yearBuilt >= 1975}"
      value: 4
    - if: "${it.inputFields.floodZone === 'V' && it.inputFields.yearBuilt >= 1975}"
      value: 13
    - if: "${it.inputFields.floodZone === 'Z'}"
      value: 0
calculatedFields:
- path: coverageARate
  equation: "${(it.inputFields.coverageA / 100) * it.lookupFields.residentialBaseRate.coverageA
    * it.lookupFields.buildingDeductibleFactor}"
- path: coverageBRate
  equation: "${(it.inputFields.coverageB / 100) * it.lookupFields.residentialBaseRate.coverageB
    * it.lookupFields.contentsDeductibleFactor}"
- path: replacementCostRate
  equation: "${it.calculatedFields.coverageBRate * it.lookupFields.replacementCostFactor}"
- path: icc
  equation: "${it.lookupFields.icc}"
- path: calculatedPremium
  equation: "${it.calculatedFields.coverageARate + it.calculatedFields.coverageBRate
    + it.calculatedFields.replacementCostRate + it.calculatedFields.icc}"
- path: netPremium
  equation: "${it.calculatedFields.calculatedPremium < 250 ? 250 : it.calculatedFields.calculatedPremium}"
- path: totalFees
  equation: "${it.constants.fees.mgaPolicy.value}"
- path: totalPremium
  equation: "${it.calculatedFields.netPremium + it.calculatedFields.totalFees}"
engineCode: AF3
